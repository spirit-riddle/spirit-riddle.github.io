"use strict";(self.webpackChunkgithub_entrance_page=self.webpackChunkgithub_entrance_page||[]).push([[576],{4094:function(e,t,l){var n=l(6540);t.A=e=>{let{navigation:t,tabs:l,children:a,activeSelection:r,activeSubItem:c=null,activeTabIndex:i=0}=e;t||(t=[{title:"Languages",items:[{title:"English Grammar",href:"/study-desk/languages/english-grammar/lesson-1/"},{title:"Arabic",href:"/study-desk/languages/arabic/resources/"}]},{title:"Technical Skills",items:[{title:"C++ Development",href:"/study-desk/technical-skills/cpp-guide/"}]},{title:"Projects",items:[{title:"MkDocs Software Printer",href:"/study-desk/projects/mkdocs-software-printer/"}]}]);const{0:o,1:d}=(0,n.useState)(r),{0:s,1:m}=(0,n.useState)(c),{0:u,1:p}=(0,n.useState)(i),{0:E,1:g}=(0,n.useState)(!1),y=()=>{g(!E)};return(0,n.useEffect)((()=>{d(r),m(c),p(i)}),[r,c,i]),n.createElement("div",{className:"study-desk-layout"},n.createElement("header",{className:"study-desk-header"},n.createElement("button",{className:"hamburger-menu",onClick:y},"☰"),n.createElement("div",{className:"logo"},"*_"),n.createElement("h1",{className:"title"},"Study Desk")),n.createElement("div",{className:"study-desk-body"},n.createElement("nav",{className:"sidebar "+(E?"open":"")},n.createElement("button",{className:"close-sidebar",onClick:y},"✕"),n.createElement("ul",null,n.createElement("li",{className:"Home"===o?"active":"",onClick:()=>{d("Home"),m(null),g(!1)}},n.createElement("a",{href:"/study-desk/"},"Home")),t.map((e=>n.createElement("li",{key:e.title},n.createElement("small",{style:{color:"rgb(140, 140, 140)",margin:"5px 0"}},n.createElement("em",null,e.title)),e.items&&n.createElement("ul",null,e.items.map((t=>n.createElement("li",{key:t.title,className:t.title===s?"active-subitem":"",onClick:()=>{d(e.title),m(t.title),g(!1)}},n.createElement("a",{href:t.href},t.title)))))))))),n.createElement("div",{className:"main-content"},l&&l.length>0&&n.createElement("div",{className:"tabs"},l.map(((e,t)=>n.createElement("a",{key:t,href:e.href,className:t===u?"active-tab":""},e.title)))),n.createElement("div",{className:"content"},a,n.createElement("footer",{className:"footer"},n.createElement("p",null,"© ",(new Date).getFullYear()," Spirit Riddle. All rights reserved."))))))}},4650:function(e,t,l){l.r(t);var n=l(6540),a=l(4094);t.default=()=>n.createElement(a.A,{activeSubItem:"C++ Development"},n.createElement("h2",null,"C++ Development Guide"),n.createElement("p",null,"Welcome to the C++ Development Guide! This resource aims to help JavaScript developers transition to C++ by highlighting key concepts and features unique to C++. Use this glossary to familiarize yourself with the language's core terminology and paradigms."),n.createElement("h3",null,"Glossary of C++ Terms"),n.createElement("table",{style:{width:"100%",borderCollapse:"collapse",marginTop:"1rem",fontFamily:"'Courier New', Courier, monospace"}},n.createElement("thead",null,n.createElement("tr",{style:{backgroundColor:"#f4f4f4"}},n.createElement("th",{style:{border:"1px solid #ddd",padding:"8px",textAlign:"left"}},"Term"),n.createElement("th",{style:{border:"1px solid #ddd",padding:"8px",textAlign:"left"}},"Definition"))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Pointer"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"A variable that stores the memory address of another variable. Pointers enable dynamic memory allocation and manipulation, a concept not directly present in JavaScript.")),n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Reference"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"An alias for an existing variable, allowing it to be accessed and modified without copying. Similar to JavaScript object references but more controlled.")),n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Template"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"A blueprint for creating generic classes and functions, enabling type-safe code reuse. JavaScript lacks a direct equivalent but achieves similar functionality with dynamic typing.")),n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Destructor"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"A special member function that is automatically invoked when an object goes out of scope to clean up resources. JavaScript's garbage collector handles memory cleanup automatically.")),n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Namespace"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"A declarative region that provides scope to identifiers, preventing name collisions. JavaScript handles this with modules or objects.")),n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Overloading"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"The ability to define multiple functions with the same name but different parameters. JavaScript achieves a similar effect with optional parameters or dynamic arguments.")),n.createElement("tr",null,n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"Static"),n.createElement("td",{style:{border:"1px solid #ddd",padding:"8px"}},"A keyword used to define class-level variables and functions that are shared across all instances. JavaScript provides similar functionality with static methods.")))),n.createElement("br",null),n.createElement("h2",null,"Memory Management in C++"),n.createElement("p",null,"Mastering memory management is essential for C++ development. Unlike JavaScript, where memory is automatically handled by a garbage collector, C++ gives developers direct control over memory allocation and deallocation. Here’s a comprehensive guide to understanding memory management in C++:"),n.createElement("h3",null,"Key Concepts"),n.createElement("ul",null,n.createElement("li",null,n.createElement("strong",null,"Stack vs. Heap Memory:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("strong",null,"Stack Memory:")," Automatically managed, fast, but limited in size. Variables are destroyed when they go out of scope."),n.createElement("li",null,n.createElement("strong",null,"Heap Memory:")," Used for dynamic memory allocation. Must be manually managed using ",n.createElement("code",null,"new")," and"," ",n.createElement("code",null,"delete"),"."))),n.createElement("li",null,n.createElement("strong",null,"Pointers:")," Variables that store memory addresses. They enable dynamic memory manipulation but require careful handling to avoid memory leaks."),n.createElement("li",null,n.createElement("strong",null,"References:")," Aliases for existing variables, safer than pointers. References must always point to valid data."),n.createElement("li",null,n.createElement("strong",null,n.createElement("code",null,"new")," and ",n.createElement("code",null,"delete"),":")," Operators for dynamic memory allocation and deallocation."),n.createElement("li",null,n.createElement("strong",null,"Memory Leaks:")," Failure to free allocated memory leads to leaks, consuming resources over time."),n.createElement("li",null,n.createElement("strong",null,"Smart Pointers:")," Modern C++ features like"," ",n.createElement("code",null,"std::unique_ptr")," and ",n.createElement("code",null,"std::shared_ptr")," that automate memory management and prevent leaks.")),n.createElement("h3",null,"Examples"),n.createElement("pre",{style:{backgroundColor:"#f4f4f4",padding:"1rem",borderRadius:"5px"}},"// Stack Memory Example\nvoid example() {\n    int x = 10; // Allocated on the stack\n} // x is automatically destroyed here\n\n// Heap Memory Example\nvoid example() {\n    int* ptr = new int(10); // Allocated on the heap\n    delete ptr;            // Deallocated manually\n}"),n.createElement("h3",null,"Types to Memorize"),n.createElement("p",null,"C++ is a statically typed language, so understanding and memorizing types is essential. Here's a categorized list:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("strong",null,"Fundamental Types:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("code",null,"int"),", ",n.createElement("code",null,"short"),", ",n.createElement("code",null,"long"),", ",n.createElement("code",null,"unsigned")),n.createElement("li",null,n.createElement("code",null,"float"),", ",n.createElement("code",null,"double"),", ",n.createElement("code",null,"long double")),n.createElement("li",null,n.createElement("code",null,"char"),", ",n.createElement("code",null,"wchar_t"),", ",n.createElement("code",null,"bool")))),n.createElement("li",null,n.createElement("strong",null,"Derived Types:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("code",null,"int*")," (pointers)"),n.createElement("li",null,n.createElement("code",null,"int&")," (references)"),n.createElement("li",null,"Arrays (e.g., ",n.createElement("code",null,"int arr[10];"),")"),n.createElement("li",null,"Functions (e.g., ",n.createElement("code",null,"int add(int a, int b);"),")"))),n.createElement("li",null,n.createElement("strong",null,"User-Defined Types:")," ",n.createElement("code",null,"struct"),", ",n.createElement("code",null,"class"),", ",n.createElement("code",null,"union"),", ",n.createElement("code",null,"enum")),n.createElement("li",null,n.createElement("strong",null,"Type Modifiers:")," ",n.createElement("code",null,"const"),", ",n.createElement("code",null,"volatile"),", ",n.createElement("code",null,"mutable")),n.createElement("li",null,n.createElement("strong",null,"Specialized Types:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("code",null,"std::string")),n.createElement("li",null,n.createElement("code",null,"std::array"),", ",n.createElement("code",null,"std::vector"),", ",n.createElement("code",null,"std::tuple")))),n.createElement("li",null,n.createElement("strong",null,"Modern C++ Types:")," ",n.createElement("code",null,"auto"),", ",n.createElement("code",null,"decltype"),", ",n.createElement("code",null,"nullptr"),", ",n.createElement("code",null,"std::shared_ptr"),", ",n.createElement("code",null,"std::unique_ptr"))))}}]);
//# sourceMappingURL=component---src-pages-study-desk-technical-skills-cpp-guide-jsx-7764b77c733d4c3b0e61.js.map