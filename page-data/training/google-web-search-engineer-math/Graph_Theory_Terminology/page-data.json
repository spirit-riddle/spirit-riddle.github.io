{"componentChunkName":"component---src-templates-markdown-template-js","path":"/training/google-web-search-engineer-math/Graph_Theory_Terminology/","result":{"data":{"markdownRemark":{"html":"<h1>Graph Theory Terminology for Search Engines</h1>\n<h2>Fundamental Concepts</h2>\n<ul>\n<li><strong>Graph</strong>: A collection of nodes (vertices) and edges connecting them, used to represent relationships and structures.</li>\n<li><strong>Directed Graph (Digraph)</strong>: A graph where edges have a direction, often used in web page link analysis.</li>\n<li><strong>Undirected Graph</strong>: A graph where edges have no direction, representing bidirectional relationships.</li>\n</ul>\n<h2>Key Properties</h2>\n<ul>\n<li><strong>Node (Vertex)</strong>: A fundamental unit of a graph, representing entities such as web pages or data points.</li>\n<li><strong>Edge</strong>: A connection between two nodes, which can be directed or undirected.</li>\n<li><strong>Degree</strong>:\n<ul>\n<li><strong>In-Degree</strong>: Number of edges coming into a node.</li>\n<li><strong>Out-Degree</strong>: Number of edges leaving a node.</li>\n</ul>\n</li>\n<li><strong>Weighted Graph</strong>: A graph where edges have weights representing costs, distances, or probabilities.</li>\n</ul>\n<h2>Graph Algorithms</h2>\n<ul>\n<li><strong>Graph Traversal</strong>:\n<ul>\n<li><strong>Depth-First Search (DFS)</strong>: Explores as far as possible along a branch before backtracking.</li>\n<li><strong>Breadth-First Search (BFS)</strong>: Explores all nodes at the current level before moving deeper.</li>\n</ul>\n</li>\n<li><strong>Shortest Path</strong>:\n<ul>\n<li><strong>Dijkstra's Algorithm</strong>: Finds the shortest path in a weighted graph.</li>\n<li><em><em>A</em> Algorithm</em>*: Optimized pathfinding using heuristics.</li>\n</ul>\n</li>\n<li><strong>Minimum Spanning Tree (MST)</strong>:\n<ul>\n<li><strong>Prim's Algorithm</strong>: Builds an MST by starting from a node and adding the smallest edge.</li>\n<li><strong>Kruskal's Algorithm</strong>: Builds an MST by sorting edges and adding them incrementally.</li>\n</ul>\n</li>\n</ul>\n<h2>Advanced Concepts</h2>\n<ul>\n<li><strong>Adjacency Matrix</strong>: A square matrix used to represent a graph, where each element indicates the presence or absence of an edge.</li>\n<li><strong>Adjacency List</strong>: A list representation of a graph, where each node has a list of its adjacent nodes.</li>\n<li><strong>Connectivity</strong>:\n<ul>\n<li><strong>Connected Graph</strong>: A graph where there is a path between every pair of nodes.</li>\n<li><strong>Strongly Connected Components (SCCs)</strong>: Subsets of a directed graph where every node is reachable from every other node within the subset.</li>\n</ul>\n</li>\n</ul>\n<h2>Applications in Search Engines</h2>\n<ul>\n<li><strong>PageRank</strong>: A graph-based algorithm that ranks web pages by analyzing the link structure of the web.</li>\n<li><strong>HITS Algorithm</strong>: Identifies hubs (pages pointing to many authorities) and authorities (pages pointed to by many hubs).</li>\n<li><strong>Graph Traversal for Indexing</strong>: Techniques like BFS and DFS are used to crawl and index web pages.</li>\n<li><strong>Weighted Graphs for Ranking</strong>: Models relationships between pages and computes relevance scores based on link weights.</li>\n</ul>\n<h2>Visualization</h2>\n<ul>\n<li><strong>Graph Plotting</strong>: Visualizing nodes and edges to understand relationships and structures.</li>\n<li><strong>Force-Directed Layouts</strong>: A technique for graph visualization where edges act as springs and nodes repel each other.</li>\n</ul>\n<p>This terminology provides the foundational lingo for discussing graph theory in the context of search engine algorithms and web structures.</p>","frontmatter":{"title":""}}},"pageContext":{"slug":"google-web-search-engineer-math/Graph_Theory_Terminology"}},"staticQueryHashes":[],"slicesMap":{}}